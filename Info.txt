Functions:
!	= pop a,     push factorial(a)
"	= start/end string literal
#	=
$	=
%	= pop a,b    push (a % b)
&	=
'	=
(	=
)	=
*	= pop a,b    push (a * b)
+	= pop a,b    push (a + b)
,	=
-	= pop a,b    push (a - b)
.	=
/	= pop a,b    push (a / b)
0	= numeric literal
1	= numeric literal
2	= numeric literal
3	= numeric literal
4	= numeric literal
5	= numeric literal
6	= numeric literal
7	= numeric literal
8	= numeric literal
9	= numeric literal
:	=
;	=
<	=
=	=
>	=
?	=
@	=
A	=
B	= pop a,b    push base(a, b)
C	= pop a      push int(a, 2)
D	= pop a      push a, a
E	=
F	=
G	=
H	= pop a      push int(a, 16)
I	=            push input()
J	=
K	=
L	= pop a      push [1 .. a]
M	=
N	=
O	=
P	= 
Q	=
R	= pop a      push reversed(a)
S	=
T	=
U	= 
V	=
W	=
X	=
Y	=
Z	=
[	=
\	=
]	=
^	=
_	= pop a      push NOT a
`	= pop a      push flattend a
a	= pop a      push is_alpha(a)
b	= pop a      push bin(a)
c	=
d	= pop a      push is_number(a)
e	=
f	=
g	=
h	= pop a      push hex(a)
i	=            if statement: iTHEN}: if true { then }
j	=
k	=
l	= pop a      push lower_case(a)
m	=
n	=
o	=
p	= pop a      push isPrime(a)
q	=
r	=            reverse stack
s	= pop a,b    push b,a
t	=
u	= pop a      push upper_case(a)
v	=
w	=
x	=
y	=
z	=
{	=
|	= print full stack
}	=            used for if statements
~	=

128+

€	=
‚	=
ƒ	=
„	=
…	=
†	=
‡	=
ˆ	=
‰	=
Š	=
‹	=
Œ	=
Ž	=
‘	=
’	=
“	=
”	=
•	=
–	=
—	=
˜	=
™	=
š	=
›	=
œ	=
ž	=
Ÿ	=
¡	=
¢	=
£	=
¤	=
¥	=
¦	=
§	=
¨	=
©	=
ª	=
«	=
¬	=
®	=
¯	=
°	=
±	=
²	=
³	=
´	=
µ	=
¶	=
·	=
¸	=
¹	=
º	=
»	=
¼	=
½	=
¾	=
¿	=
À	=
Á	=
Â	=
Ã	=
Ä	=
Å	=
Æ	=
Ç	=
È	=
É	=
Ê	=
Ë	=
Ì	=
Í	=
Î	=
Ï	=
Ð	=
Ñ	=
Ò	=
Ó	=
Ô	=
Õ	=
Ö	=
×	=
Ø	=
Ù	=
Ú	=
Û	=
Ü	=
Ý	=
Þ	=
ß	=
à	=
á	=
â	=
ã	=
ä	=
å	=
æ	=
ç	=
è	=
é	=
ê	=
ë	=
ì	=
í	=
î	=
ï	=
ð	=
ñ	=
ò	=
ó	=
ô	=
õ	=
ö	=
÷	=
ø	=
ù	=
ú	=
û	=
ü	=
ý	=
þ	=
ÿ	=
ÿ	=


